// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.3
// source: risk/v1/risk.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务类型的枚举
type TaskType int32

const (
	TaskType_UNDEFINED             TaskType = 0 // 未定义（默认值）
	TaskType_GRAYLIST_EXPIRE_TASK  TaskType = 1 // 灰名单失效任务
	TaskType_WHITELIST_EXPIRE_TASK TaskType = 2 // 白名单失效任务
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0: "UNDEFINED",
		1: "GRAYLIST_EXPIRE_TASK",
		2: "WHITELIST_EXPIRE_TASK",
	}
	TaskType_value = map[string]int32{
		"UNDEFINED":             0,
		"GRAYLIST_EXPIRE_TASK":  1,
		"WHITELIST_EXPIRE_TASK": 2,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_risk_v1_risk_proto_enumTypes[0].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_risk_v1_risk_proto_enumTypes[0]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{0}
}

type RiskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RiskReq) Reset() {
	*x = RiskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReq) ProtoMessage() {}

func (x *RiskReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReq.ProtoReflect.Descriptor instead.
func (*RiskReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{0}
}

type RiskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RiskReply) Reset() {
	*x = RiskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReply) ProtoMessage() {}

func (x *RiskReply) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReply.ProtoReflect.Descriptor instead.
func (*RiskReply) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{1}
}

type ScheduledTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId       string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                              // 任务唯一标识符
	DelaySeconds int64    `protobuf:"varint,2,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`           // 延迟执行的秒数
	Data         []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                                // 任务数据，可以序列化任何内容
	TaskType     TaskType `protobuf:"varint,4,opt,name=task_type,json=taskType,proto3,enum=risk.v1.TaskType" json:"task_type,omitempty"` // 任务类型，用于区分不同类型的任务
}

func (x *ScheduledTaskRequest) Reset() {
	*x = ScheduledTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledTaskRequest) ProtoMessage() {}

func (x *ScheduledTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledTaskRequest.ProtoReflect.Descriptor instead.
func (*ScheduledTaskRequest) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduledTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ScheduledTaskRequest) GetDelaySeconds() int64 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

func (x *ScheduledTaskRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ScheduledTaskRequest) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_UNDEFINED
}

var File_risk_v1_risk_proto protoreflect.FileDescriptor

var file_risk_v1_risk_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x69, 0x73, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x22, 0x09, 0x0a,
	0x07, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x69, 0x73, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x2a, 0x4e, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x47,
	0x52, 0x41, 0x59, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x5f, 0x54,
	0x41, 0x53, 0x4b, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x48, 0x49, 0x54, 0x45, 0x4c, 0x49,
	0x53, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x10, 0x02,
	0x32, 0x48, 0x0a, 0x14, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x52, 0x69, 0x73, 0x6b,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_risk_v1_risk_proto_rawDescOnce sync.Once
	file_risk_v1_risk_proto_rawDescData = file_risk_v1_risk_proto_rawDesc
)

func file_risk_v1_risk_proto_rawDescGZIP() []byte {
	file_risk_v1_risk_proto_rawDescOnce.Do(func() {
		file_risk_v1_risk_proto_rawDescData = protoimpl.X.CompressGZIP(file_risk_v1_risk_proto_rawDescData)
	})
	return file_risk_v1_risk_proto_rawDescData
}

var file_risk_v1_risk_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_risk_v1_risk_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_risk_v1_risk_proto_goTypes = []interface{}{
	(TaskType)(0),                // 0: risk.v1.TaskType
	(*RiskReq)(nil),              // 1: risk.v1.RiskReq
	(*RiskReply)(nil),            // 2: risk.v1.RiskReply
	(*ScheduledTaskRequest)(nil), // 3: risk.v1.ScheduledTaskRequest
}
var file_risk_v1_risk_proto_depIdxs = []int32{
	0, // 0: risk.v1.ScheduledTaskRequest.task_type:type_name -> risk.v1.TaskType
	1, // 1: risk.v1.LiveRiskInnerService.RiskTest:input_type -> risk.v1.RiskReq
	2, // 2: risk.v1.LiveRiskInnerService.RiskTest:output_type -> risk.v1.RiskReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_risk_v1_risk_proto_init() }
func file_risk_v1_risk_proto_init() {
	if File_risk_v1_risk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_risk_v1_risk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_risk_v1_risk_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_risk_v1_risk_proto_goTypes,
		DependencyIndexes: file_risk_v1_risk_proto_depIdxs,
		EnumInfos:         file_risk_v1_risk_proto_enumTypes,
		MessageInfos:      file_risk_v1_risk_proto_msgTypes,
	}.Build()
	File_risk_v1_risk_proto = out.File
	file_risk_v1_risk_proto_rawDesc = nil
	file_risk_v1_risk_proto_goTypes = nil
	file_risk_v1_risk_proto_depIdxs = nil
}
