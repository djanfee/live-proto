// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.3
// source: risk/v1/risk.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 风控名单类型枚举
type RiskListType int32

const (
	RiskListType_RISK_LIST_TYPE_UNSPECIFIED RiskListType = 0 // 未指定
	RiskListType_RISK_LIST_TYPE_NORMAL      RiskListType = 1 // 普通用户
	RiskListType_RISK_LIST_TYPE_WHITE       RiskListType = 2 // 白名单
	RiskListType_RISK_LIST_TYPE_GRAY        RiskListType = 3 // 灰名单
	RiskListType_RISK_LIST_TYPE_BLACK       RiskListType = 4 // 黑名单
)

// Enum value maps for RiskListType.
var (
	RiskListType_name = map[int32]string{
		0: "RISK_LIST_TYPE_UNSPECIFIED",
		1: "RISK_LIST_TYPE_NORMAL",
		2: "RISK_LIST_TYPE_WHITE",
		3: "RISK_LIST_TYPE_GRAY",
		4: "RISK_LIST_TYPE_BLACK",
	}
	RiskListType_value = map[string]int32{
		"RISK_LIST_TYPE_UNSPECIFIED": 0,
		"RISK_LIST_TYPE_NORMAL":      1,
		"RISK_LIST_TYPE_WHITE":       2,
		"RISK_LIST_TYPE_GRAY":        3,
		"RISK_LIST_TYPE_BLACK":       4,
	}
)

func (x RiskListType) Enum() *RiskListType {
	p := new(RiskListType)
	*p = x
	return p
}

func (x RiskListType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskListType) Descriptor() protoreflect.EnumDescriptor {
	return file_risk_v1_risk_proto_enumTypes[0].Descriptor()
}

func (RiskListType) Type() protoreflect.EnumType {
	return &file_risk_v1_risk_proto_enumTypes[0]
}

func (x RiskListType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiskListType.Descriptor instead.
func (RiskListType) EnumDescriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{0}
}

type RiskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RiskReq) Reset() {
	*x = RiskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReq) ProtoMessage() {}

func (x *RiskReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReq.ProtoReflect.Descriptor instead.
func (*RiskReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{0}
}

type RiskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RiskReply) Reset() {
	*x = RiskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReply) ProtoMessage() {}

func (x *RiskReply) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReply.ProtoReflect.Descriptor instead.
func (*RiskReply) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{1}
}

type NotifyRiskRuleTriggerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *NotifyRiskRuleTriggerReq) Reset() {
	*x = NotifyRiskRuleTriggerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRiskRuleTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRiskRuleTriggerReq) ProtoMessage() {}

func (x *NotifyRiskRuleTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRiskRuleTriggerReq.ProtoReflect.Descriptor instead.
func (*NotifyRiskRuleTriggerReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{2}
}

func (x *NotifyRiskRuleTriggerReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserRiskListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户ID
}

func (x *GetUserRiskListReq) Reset() {
	*x = GetUserRiskListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRiskListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRiskListReq) ProtoMessage() {}

func (x *GetUserRiskListReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRiskListReq.ProtoReflect.Descriptor instead.
func (*GetUserRiskListReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserRiskListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserRiskListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRiskList RiskListType `protobuf:"varint,1,opt,name=user_risk_list,json=userRiskList,proto3,enum=risk.v1.RiskListType" json:"user_risk_list,omitempty"` // 用户名单类型
}

func (x *GetUserRiskListReply) Reset() {
	*x = GetUserRiskListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRiskListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRiskListReply) ProtoMessage() {}

func (x *GetUserRiskListReply) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRiskListReply.ProtoReflect.Descriptor instead.
func (*GetUserRiskListReply) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserRiskListReply) GetUserRiskList() RiskListType {
	if x != nil {
		return x.UserRiskList
	}
	return RiskListType_RISK_LIST_TYPE_UNSPECIFIED
}

// 批量获取用户风控名单请求
type BatchGetUserRiskListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"` // 用户ID列表
}

func (x *BatchGetUserRiskListReq) Reset() {
	*x = BatchGetUserRiskListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetUserRiskListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserRiskListReq) ProtoMessage() {}

func (x *BatchGetUserRiskListReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserRiskListReq.ProtoReflect.Descriptor instead.
func (*BatchGetUserRiskListReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{5}
}

func (x *BatchGetUserRiskListReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// 批量获取用户风控名单响应
type BatchGetUserRiskListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRiskLists map[int64]RiskListType `protobuf:"bytes,1,rep,name=user_risk_lists,json=userRiskLists,proto3" json:"user_risk_lists,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=risk.v1.RiskListType"` // 用户ID -> 风控名单信息
}

func (x *BatchGetUserRiskListReply) Reset() {
	*x = BatchGetUserRiskListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_risk_v1_risk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetUserRiskListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUserRiskListReply) ProtoMessage() {}

func (x *BatchGetUserRiskListReply) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUserRiskListReply.ProtoReflect.Descriptor instead.
func (*BatchGetUserRiskListReply) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{6}
}

func (x *BatchGetUserRiskListReply) GetUserRiskLists() map[int64]RiskListType {
	if x != nil {
		return x.UserRiskLists
	}
	return nil
}

var File_risk_v1_risk_proto protoreflect.FileDescriptor

var file_risk_v1_risk_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x69, 0x73, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x22, 0x09, 0x0a,
	0x07, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x69, 0x73, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x69, 0x73, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x3b, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x69, 0x73, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x34,
	0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x73, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x72, 0x69,
	0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x1a, 0x57, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x96, 0x01, 0x0a, 0x0c, 0x52,
	0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x52,
	0x49, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52,
	0x49, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f,
	0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x49, 0x53, 0x4b, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x49, 0x53, 0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x47, 0x52, 0x41, 0x59, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x49, 0x53,
	0x4b, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x41, 0x43,
	0x4b, 0x10, 0x04, 0x32, 0x93, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x69, 0x73, 0x6b,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x15,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4d, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1b, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72,
	0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x14, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x72, 0x69, 0x73, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x69, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70,
	0x62, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_risk_v1_risk_proto_rawDescOnce sync.Once
	file_risk_v1_risk_proto_rawDescData = file_risk_v1_risk_proto_rawDesc
)

func file_risk_v1_risk_proto_rawDescGZIP() []byte {
	file_risk_v1_risk_proto_rawDescOnce.Do(func() {
		file_risk_v1_risk_proto_rawDescData = protoimpl.X.CompressGZIP(file_risk_v1_risk_proto_rawDescData)
	})
	return file_risk_v1_risk_proto_rawDescData
}

var file_risk_v1_risk_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_risk_v1_risk_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_risk_v1_risk_proto_goTypes = []interface{}{
	(RiskListType)(0),                 // 0: risk.v1.RiskListType
	(*RiskReq)(nil),                   // 1: risk.v1.RiskReq
	(*RiskReply)(nil),                 // 2: risk.v1.RiskReply
	(*NotifyRiskRuleTriggerReq)(nil),  // 3: risk.v1.NotifyRiskRuleTriggerReq
	(*GetUserRiskListReq)(nil),        // 4: risk.v1.GetUserRiskListReq
	(*GetUserRiskListReply)(nil),      // 5: risk.v1.GetUserRiskListReply
	(*BatchGetUserRiskListReq)(nil),   // 6: risk.v1.BatchGetUserRiskListReq
	(*BatchGetUserRiskListReply)(nil), // 7: risk.v1.BatchGetUserRiskListReply
	nil,                               // 8: risk.v1.BatchGetUserRiskListReply.UserRiskListsEntry
}
var file_risk_v1_risk_proto_depIdxs = []int32{
	0, // 0: risk.v1.GetUserRiskListReply.user_risk_list:type_name -> risk.v1.RiskListType
	8, // 1: risk.v1.BatchGetUserRiskListReply.user_risk_lists:type_name -> risk.v1.BatchGetUserRiskListReply.UserRiskListsEntry
	0, // 2: risk.v1.BatchGetUserRiskListReply.UserRiskListsEntry.value:type_name -> risk.v1.RiskListType
	3, // 3: risk.v1.LiveRiskInnerService.NotifyRiskRuleTrigger:input_type -> risk.v1.NotifyRiskRuleTriggerReq
	4, // 4: risk.v1.LiveRiskInnerService.GetUserRiskList:input_type -> risk.v1.GetUserRiskListReq
	6, // 5: risk.v1.LiveRiskInnerService.BatchGetUserRiskList:input_type -> risk.v1.BatchGetUserRiskListReq
	2, // 6: risk.v1.LiveRiskInnerService.NotifyRiskRuleTrigger:output_type -> risk.v1.RiskReply
	5, // 7: risk.v1.LiveRiskInnerService.GetUserRiskList:output_type -> risk.v1.GetUserRiskListReply
	7, // 8: risk.v1.LiveRiskInnerService.BatchGetUserRiskList:output_type -> risk.v1.BatchGetUserRiskListReply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_risk_v1_risk_proto_init() }
func file_risk_v1_risk_proto_init() {
	if File_risk_v1_risk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_risk_v1_risk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRiskRuleTriggerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRiskListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRiskListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetUserRiskListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_risk_v1_risk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetUserRiskListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_risk_v1_risk_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_risk_v1_risk_proto_goTypes,
		DependencyIndexes: file_risk_v1_risk_proto_depIdxs,
		EnumInfos:         file_risk_v1_risk_proto_enumTypes,
		MessageInfos:      file_risk_v1_risk_proto_msgTypes,
	}.Build()
	File_risk_v1_risk_proto = out.File
	file_risk_v1_risk_proto_rawDesc = nil
	file_risk_v1_risk_proto_goTypes = nil
	file_risk_v1_risk_proto_depIdxs = nil
}
