// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: risk/v1/risk.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RiskReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskReq) Reset() {
	*x = RiskReq{}
	mi := &file_risk_v1_risk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReq) ProtoMessage() {}

func (x *RiskReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReq.ProtoReflect.Descriptor instead.
func (*RiskReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{0}
}

type RiskReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RiskReply) Reset() {
	*x = RiskReply{}
	mi := &file_risk_v1_risk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskReply) ProtoMessage() {}

func (x *RiskReply) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiskReply.ProtoReflect.Descriptor instead.
func (*RiskReply) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{1}
}

type NotifyRiskRuleTriggerReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	UserId        int64                    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户ID
	CurrencyCode  string                   `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` //货币Code
	RiskRuleInfo  []*NotifyRiskRuleTrigger `protobuf:"bytes,3,rep,name=risk_rule_info,json=riskRuleInfo,proto3" json:"risk_rule_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyRiskRuleTriggerReq) Reset() {
	*x = NotifyRiskRuleTriggerReq{}
	mi := &file_risk_v1_risk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyRiskRuleTriggerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRiskRuleTriggerReq) ProtoMessage() {}

func (x *NotifyRiskRuleTriggerReq) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRiskRuleTriggerReq.ProtoReflect.Descriptor instead.
func (*NotifyRiskRuleTriggerReq) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{2}
}

func (x *NotifyRiskRuleTriggerReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NotifyRiskRuleTriggerReq) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *NotifyRiskRuleTriggerReq) GetRiskRuleInfo() []*NotifyRiskRuleTrigger {
	if x != nil {
		return x.RiskRuleInfo
	}
	return nil
}

type NotifyRiskRuleTrigger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetType    int64                  `protobuf:"varint,2,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`   // 触发类型
	TargetValue   []string               `protobuf:"bytes,3,rep,name=target_value,json=targetValue,proto3" json:"target_value,omitempty"` // 触发值（参数）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyRiskRuleTrigger) Reset() {
	*x = NotifyRiskRuleTrigger{}
	mi := &file_risk_v1_risk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyRiskRuleTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRiskRuleTrigger) ProtoMessage() {}

func (x *NotifyRiskRuleTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_risk_v1_risk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRiskRuleTrigger.ProtoReflect.Descriptor instead.
func (*NotifyRiskRuleTrigger) Descriptor() ([]byte, []int) {
	return file_risk_v1_risk_proto_rawDescGZIP(), []int{3}
}

func (x *NotifyRiskRuleTrigger) GetTargetType() int64 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

func (x *NotifyRiskRuleTrigger) GetTargetValue() []string {
	if x != nil {
		return x.TargetValue
	}
	return nil
}

var File_risk_v1_risk_proto protoreflect.FileDescriptor

const file_risk_v1_risk_proto_rawDesc = "" +
	"\n" +
	"\x12risk/v1/risk.proto\x12\arisk.v1\"\t\n" +
	"\aRiskReq\"\v\n" +
	"\tRiskReply\"\x9e\x01\n" +
	"\x18NotifyRiskRuleTriggerReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x12D\n" +
	"\x0erisk_rule_info\x18\x03 \x03(\v2\x1e.risk.v1.NotifyRiskRuleTriggerR\friskRuleInfo\"[\n" +
	"\x15NotifyRiskRuleTrigger\x12\x1f\n" +
	"\vtarget_type\x18\x02 \x01(\x03R\n" +
	"targetType\x12!\n" +
	"\ftarget_value\x18\x03 \x03(\tR\vtargetValue2f\n" +
	"\x14LiveRiskInnerService\x12N\n" +
	"\x15NotifyRiskRuleTrigger\x12!.risk.v1.NotifyRiskRuleTriggerReq\x1a\x12.risk.v1.RiskReplyB\tZ\a./pb/v1b\x06proto3"

var (
	file_risk_v1_risk_proto_rawDescOnce sync.Once
	file_risk_v1_risk_proto_rawDescData []byte
)

func file_risk_v1_risk_proto_rawDescGZIP() []byte {
	file_risk_v1_risk_proto_rawDescOnce.Do(func() {
		file_risk_v1_risk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_risk_v1_risk_proto_rawDesc), len(file_risk_v1_risk_proto_rawDesc)))
	})
	return file_risk_v1_risk_proto_rawDescData
}

var file_risk_v1_risk_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_risk_v1_risk_proto_goTypes = []any{
	(*RiskReq)(nil),                  // 0: risk.v1.RiskReq
	(*RiskReply)(nil),                // 1: risk.v1.RiskReply
	(*NotifyRiskRuleTriggerReq)(nil), // 2: risk.v1.NotifyRiskRuleTriggerReq
	(*NotifyRiskRuleTrigger)(nil),    // 3: risk.v1.NotifyRiskRuleTrigger
}
var file_risk_v1_risk_proto_depIdxs = []int32{
	3, // 0: risk.v1.NotifyRiskRuleTriggerReq.risk_rule_info:type_name -> risk.v1.NotifyRiskRuleTrigger
	2, // 1: risk.v1.LiveRiskInnerService.NotifyRiskRuleTrigger:input_type -> risk.v1.NotifyRiskRuleTriggerReq
	1, // 2: risk.v1.LiveRiskInnerService.NotifyRiskRuleTrigger:output_type -> risk.v1.RiskReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_risk_v1_risk_proto_init() }
func file_risk_v1_risk_proto_init() {
	if File_risk_v1_risk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_risk_v1_risk_proto_rawDesc), len(file_risk_v1_risk_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_risk_v1_risk_proto_goTypes,
		DependencyIndexes: file_risk_v1_risk_proto_depIdxs,
		MessageInfos:      file_risk_v1_risk_proto_msgTypes,
	}.Build()
	File_risk_v1_risk_proto = out.File
	file_risk_v1_risk_proto_goTypes = nil
	file_risk_v1_risk_proto_depIdxs = nil
}
