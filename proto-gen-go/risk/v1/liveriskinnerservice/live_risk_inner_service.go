// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: risk.proto

package liveriskinnerservice

import (
	"context"

	"github.com/hanyougame/live-proto/proto-gen-go/risk/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	NotifyRiskRuleTrigger    = v1.NotifyRiskRuleTrigger
	NotifyRiskRuleTriggerReq = v1.NotifyRiskRuleTriggerReq
	RiskReply                = v1.RiskReply
	RiskReq                  = v1.RiskReq

	LiveRiskInnerService interface {
		// NotifyRiskRuleTrigger 处理通知风控触发规则
		NotifyRiskRuleTrigger(ctx context.Context, in *NotifyRiskRuleTriggerReq, opts ...grpc.CallOption) (*RiskReply, error)
	}

	defaultLiveRiskInnerService struct {
		cli zrpc.Client
	}
)

func NewLiveRiskInnerService(cli zrpc.Client) LiveRiskInnerService {
	return &defaultLiveRiskInnerService{
		cli: cli,
	}
}

// NotifyRiskRuleTrigger 处理通知风控触发规则
func (m *defaultLiveRiskInnerService) NotifyRiskRuleTrigger(ctx context.Context, in *NotifyRiskRuleTriggerReq, opts ...grpc.CallOption) (*RiskReply, error) {
	client := v1.NewLiveRiskInnerServiceClient(m.cli.Conn())
	return client.NotifyRiskRuleTrigger(ctx, in, opts...)
}
