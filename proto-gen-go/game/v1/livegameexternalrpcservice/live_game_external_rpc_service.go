// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: game.proto

package livegameexternalrpcservice

import (
	"context"

	"github.com/hanyougame/live-proto/proto-gen-go/game/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EnterGameReply                           = v1.EnterGameReply
	EnterGameReq                             = v1.EnterGameReq
	EnterGameTryReply                        = v1.EnterGameTryReply
	EnterGameTryReq                          = v1.EnterGameTryReq
	GameUserAdjustmentReply                  = v1.GameUserAdjustmentReply
	GameUserAdjustmentReq                    = v1.GameUserAdjustmentReq
	GameUserBetCancelReply                   = v1.GameUserBetCancelReply
	GameUserBetCancelReq                     = v1.GameUserBetCancelReq
	GameUserBetReply                         = v1.GameUserBetReply
	GameUserBetReq                           = v1.GameUserBetReq
	GameUserRewardReply                      = v1.GameUserRewardReply
	GameUserRewardReq                        = v1.GameUserRewardReq
	GetGameBetOrderListReply                 = v1.GetGameBetOrderListReply
	GetGameBetOrderListReplyOrderInfo        = v1.GetGameBetOrderListReplyOrderInfo
	GetGameBetOrderListReq                   = v1.GetGameBetOrderListReq
	GetGameResourceListReply                 = v1.GetGameResourceListReply
	GetGameResourceListReplyGameResourceInfo = v1.GetGameResourceListReplyGameResourceInfo
	GetGameResourceListReq                   = v1.GetGameResourceListReq
	GetGameTransferOrderStatusReply          = v1.GetGameTransferOrderStatusReply
	GetGameTransferOrderStatusReplyOrderInfo = v1.GetGameTransferOrderStatusReplyOrderInfo
	GetGameTransferOrderStatusReq            = v1.GetGameTransferOrderStatusReq
	GetWalletTransferBalanceReply            = v1.GetWalletTransferBalanceReply
	GetWalletTransferBalanceReq              = v1.GetWalletTransferBalanceReq
	TransferCallbackReply                    = v1.TransferCallbackReply
	TransferCallbackReq                      = v1.TransferCallbackReq
	WalletTransferInGameReply                = v1.WalletTransferInGameReply
	WalletTransferInGameReq                  = v1.WalletTransferInGameReq
	WalletTransferOutGameReply               = v1.WalletTransferOutGameReply
	WalletTransferOutGameReq                 = v1.WalletTransferOutGameReq

	LiveGameExternalRpcService interface {
		// 进入游戏
		EnterGame(ctx context.Context, in *EnterGameReq, opts ...grpc.CallOption) (*EnterGameReply, error)
		// 进入游戏试玩
		EnterGameTry(ctx context.Context, in *EnterGameTryReq, opts ...grpc.CallOption) (*EnterGameTryReply, error)
		// 获取游戏资源信息
		GetGameResourceList(ctx context.Context, in *GetGameResourceListReq, opts ...grpc.CallOption) (*GetGameResourceListReply, error)
		// 转账钱包转入游戏
		WalletTransferInGame(ctx context.Context, in *WalletTransferInGameReq, opts ...grpc.CallOption) (*WalletTransferInGameReply, error)
		// 转账钱包转入
		WalletTransferOutGame(ctx context.Context, in *WalletTransferOutGameReq, opts ...grpc.CallOption) (*WalletTransferOutGameReply, error)
		// 转账钱包转入游戏
		GetWalletTransferBalance(ctx context.Context, in *GetWalletTransferBalanceReq, opts ...grpc.CallOption) (*GetWalletTransferBalanceReply, error)
		// 查询用户游戏转账（转入、转出）订单状态
		GetGameTransferOrderStatus(ctx context.Context, in *GetGameTransferOrderStatusReq, opts ...grpc.CallOption) (*GetGameTransferOrderStatusReply, error)
		// 查询用户游戏投注订单列表
		GetGameBetOrderList(ctx context.Context, in *GetGameBetOrderListReq, opts ...grpc.CallOption) (*GetGameBetOrderListReply, error)
	}

	defaultLiveGameExternalRpcService struct {
		cli zrpc.Client
	}
)

func NewLiveGameExternalRpcService(cli zrpc.Client) LiveGameExternalRpcService {
	return &defaultLiveGameExternalRpcService{
		cli: cli,
	}
}

// 进入游戏
func (m *defaultLiveGameExternalRpcService) EnterGame(ctx context.Context, in *EnterGameReq, opts ...grpc.CallOption) (*EnterGameReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.EnterGame(ctx, in, opts...)
}

// 进入游戏试玩
func (m *defaultLiveGameExternalRpcService) EnterGameTry(ctx context.Context, in *EnterGameTryReq, opts ...grpc.CallOption) (*EnterGameTryReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.EnterGameTry(ctx, in, opts...)
}

// 获取游戏资源信息
func (m *defaultLiveGameExternalRpcService) GetGameResourceList(ctx context.Context, in *GetGameResourceListReq, opts ...grpc.CallOption) (*GetGameResourceListReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.GetGameResourceList(ctx, in, opts...)
}

// 转账钱包转入游戏
func (m *defaultLiveGameExternalRpcService) WalletTransferInGame(ctx context.Context, in *WalletTransferInGameReq, opts ...grpc.CallOption) (*WalletTransferInGameReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.WalletTransferInGame(ctx, in, opts...)
}

// 转账钱包转入
func (m *defaultLiveGameExternalRpcService) WalletTransferOutGame(ctx context.Context, in *WalletTransferOutGameReq, opts ...grpc.CallOption) (*WalletTransferOutGameReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.WalletTransferOutGame(ctx, in, opts...)
}

// 转账钱包转入游戏
func (m *defaultLiveGameExternalRpcService) GetWalletTransferBalance(ctx context.Context, in *GetWalletTransferBalanceReq, opts ...grpc.CallOption) (*GetWalletTransferBalanceReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.GetWalletTransferBalance(ctx, in, opts...)
}

// 查询用户游戏转账（转入、转出）订单状态
func (m *defaultLiveGameExternalRpcService) GetGameTransferOrderStatus(ctx context.Context, in *GetGameTransferOrderStatusReq, opts ...grpc.CallOption) (*GetGameTransferOrderStatusReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.GetGameTransferOrderStatus(ctx, in, opts...)
}

// 查询用户游戏投注订单列表
func (m *defaultLiveGameExternalRpcService) GetGameBetOrderList(ctx context.Context, in *GetGameBetOrderListReq, opts ...grpc.CallOption) (*GetGameBetOrderListReply, error) {
	client := v1.NewLiveGameExternalRpcServiceClient(m.cli.Conn())
	return client.GetGameBetOrderList(ctx, in, opts...)
}
